plugins {
    id 'com.github.johnrengelman.shadow' version '5.0.0'
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version '1.3.70'
    id 'me.qoomon.git-versioning' version '2.1.1'
    id 'maven-publish'
}
group 'cf.wayzer'
version '1.3'
ext{
    mindistryVersion = "v104"
//    mindistryVersion = "-SNAPSHOT"
    mapdbVersion = "3.0.7"
}

gitVersioning.apply({
    tag{
        pattern = "v(?<tagVersion>[0-9].*)"
        versionFormat = "\${tagVersion}\${dirty}"
    }
    commit{
        versionFormat = "\${version}-\${commit.short}\${dirty}"
    }
})

import org.apache.tools.ant.filters.ReplaceTokens
processResources {
    filter(ReplaceTokens, tokens: ['version': version])
}

sourceCompatibility = 1.8
shadowJar {
    configurations = [project.configurations.shadow]
    include("*.jar")
    include("cf/wayzer/**")
    include("plugin.json")
    include("defaultConf.conf")
}

repositories {
    maven{ url "http://maven.aliyun.com/nexus/content/groups/public/"}
    jcenter()
    maven{ url 'https://www.jitpack.io' }
    maven{ url "https://dl.bintray.com/way-zer/maven" }
}

dependencies {
    shadow 'cf.wayzer:LibraryManager:1.3'
    shadow 'cf.wayzer:i18nLibrary:1.0'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    implementation "org.mapdb:mapdb:$mapdbVersion"
    implementation "io.github.config4k:config4k:0.4.2"
    compileOnly "com.github.Anuken.Arc:arc-core:$mindistryVersion"
    compileOnly "com.github.Anuken.Mindustry:core:$mindistryVersion"
    testCompile group: 'junit', name: 'junit', version: '4.12'
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
publishing{
    publications {
        maven(MavenPublication) {
            groupId = rootProject.group
            artifactId = rootProject.name
            version = rootProject.version
            from components.kotlin
        }
    }
}